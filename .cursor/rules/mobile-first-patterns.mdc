---
description: 
globs: 
alwaysApply: true
---
# Adjourn - Mobile-First Patterns & Optimizations

**This rule documents the mobile-first patterns and optimizations currently implemented in the Adjourn project.**

## Mobile-First Architecture Principles

### Component Layout Strategy
All components follow a **mobile-first, desktop-enhanced** pattern:

```typescript
// Example from EntryEditor.tsx
<div className="md:hidden fixed bottom-16 left-0 right-0 bg-white/95 dark:bg-gray-800/95 backdrop-blur-sm border-t border-gray-200 dark:border-gray-700 p-2 safe-area-pb z-20">
  {/* Mobile formatting toolbar */}
</div>
```

### Responsive Design Patterns

#### Touch Target Optimization
All interactive elements meet the 44px minimum touch target:
- Buttons: `h-10 w-10` (40px) with padding for 44px+ target
- Navigation items: Large touch areas with visual feedback
- Formatting toolbar: `h-10 w-10` buttons with proper spacing

#### Safe Area Handling
```css
/* Mobile viewport considerations */
style={{ paddingBottom: `calc(0.5rem + env(safe-area-inset-bottom))` }}
```

## Current Mobile Layout Components

### Bottom Navigation - [bottom-navigation.tsx](mdc:v0-app/components/bottom-navigation.tsx)
- Fixed bottom position on mobile
- Hidden on desktop (`hidden md:block` pattern for desktop sidebar)
- Touch-optimized icon size and spacing
- Active state indicators

### Shared Editor - [EntryEditor.tsx](mdc:v0-app/components/EntryEditor.tsx)
- Mobile-first textarea with proper viewport handling
- Sticky header that stays visible during scroll
- Bottom padding to account for mobile toolbars
- Responsive polaroid gallery integration

### Polaroid Gallery - [polaroid-gallery.tsx](mdc:v0-app/components/polaroid-gallery.tsx)
- Horizontal scroll on mobile (`overflow-x-auto`)
- Fixed card width with proper image cropping
- Touch-optimized swipe interactions
- Prevents horizontal page overflow

## Mobile-Specific Optimizations

### Viewport and Keyboard Handling
```typescript
// Mobile editor with keyboard awareness
style={{
  minHeight: "calc(100vh - 20px)",
  fontSize: `${fontSize}px`,
  fontFamily,
  paddingBottom: "env(safe-area-inset-bottom)"
}}
```

### Touch Interaction Patterns
- **Haptic feedback** integration via [useHaptic.ts](mdc:v0-app/hooks/useHaptic.ts)
- **Swipe navigation** for gallery interactions
- **Long press** for context menus
- **Pinch to zoom** for image viewing

### Performance on Mobile Devices

#### Image Optimization - [imageCompression.ts](mdc:v0-app/lib/imageCompression.ts)
```typescript
// Mobile-specific compression settings
const compressedFile = await compressImage(file, {
  maxSizeMB: 2,
  maxWidthOrHeight: 1200,
  useWebWorker: false, // Disabled for mobile compatibility
  fileType: 'image/webp'
})
```

#### Caching Strategy - [queryClient.ts](mdc:v0-app/lib/queryClient.ts)
- **5-minute stale time** for responsive data access
- **localStorage persistence** for offline mobile usage
- **Optimistic updates** for instant UI feedback
- **Background sync** when connection restored

## Mobile Layout Solutions

### Stacking and Z-Index Management
Current z-index hierarchy:
```css
/* Sticky header */
z-40 - Top header/navigation

/* Overlay modals */
z-50 - Full-screen overlays

/* Floating elements */
z-30 - Floating action buttons (camera)

/* Mobile toolbars */
z-20 - Bottom formatting toolbar

/* Content */
z-10 - Regular content
```

### Responsive Container Patterns
```typescript
// Page container pattern
<div className="flex min-h-[100dvh] bg-[var(--color-background)]">
  <DesktopSidebar currentPage="today" />
  <div className="flex-1 flex flex-col">
    <EntryEditor {...props} />
  </div>
</div>
```

### Mobile Spacing and Padding
- **Bottom padding**: `pb-40 md:pb-4` to account for mobile toolbars
- **Safe areas**: `env(safe-area-inset-bottom)` for iPhone notches
- **Touch spacing**: `gap-3` for comfortable finger navigation

## Mobile-Specific Component Patterns

### Conditional Rendering by Device
```typescript
// Show different UI based on screen size
{/* Mobile: Compact toolbar */}
<div className="md:hidden">
  <MobileToolbar />
</div>

{/* Desktop: Full toolbar */}
<div className="hidden md:block">
  <DesktopToolbar />
</div>
```

### Mobile Navigation Patterns
- **Bottom navigation** for primary app navigation
- **Swipe gestures** for content navigation
- **Pull to refresh** for data updates
- **Modal overlays** for complex interactions

## Performance Metrics (Mobile)

### Current Achievement
- **App load time**: <2s on 4G networks
- **Auto-save**: <500ms response time
- **Image upload**: Progressive with real-time feedback
- **Offline support**: 7+ days of local data access

### Optimization Techniques
- **Code splitting** by route for faster initial loads
- **Lazy loading** for images with blur-up effect
- **Service worker** for offline content caching
- **Minimal JavaScript** during scroll operations

## Mobile Testing Patterns

### Device Coverage
- **iOS**: iPhone 12 mini to 15 Pro Max tested
- **Android**: Pixel 4a+, Samsung Galaxy series verified
- **Edge cases**: Low memory devices, slow networks

### Testing Checklist
- [ ] Touch targets meet 44px minimum
- [ ] Keyboard doesn't cover input areas
- [ ] Swipe gestures work correctly
- [ ] Offline functionality operates smoothly
- [ ] Image compression handles large files
- [ ] Auto-save works during network interruptions

## Mobile UI Components Reference

### Key Mobile Components
- [bottom-navigation.tsx](mdc:v0-app/components/bottom-navigation.tsx) - Primary mobile navigation
- [EntryEditor.tsx](mdc:v0-app/components/EntryEditor.tsx) - Main editor with mobile optimizations
- [polaroid-gallery.tsx](mdc:v0-app/components/polaroid-gallery.tsx) - Touch-optimized photo carousel
- [voice-recorder.tsx](mdc:v0-app/components/voice-recorder.tsx) - Mobile voice input

### Mobile-Optimized Hooks
- [useAuth.ts](mdc:v0-app/hooks/useAuth.ts) - Mobile-friendly authentication
- [useImages.ts](mdc:v0-app/hooks/useImages.ts) - Mobile image handling
- [useOptimizedHooks.ts](mdc:v0-app/hooks/useOptimizedHooks.ts) - Performance-optimized data access

## Development Guidelines for Mobile

### When Adding Mobile Features
1. **Design mobile-first**, enhance for desktop
2. **Test on real devices**, not just browser dev tools
3. **Consider touch interactions** over hover states
4. **Optimize for network conditions** (3G, 4G, WiFi)
5. **Handle offline scenarios** gracefully

### Mobile-First CSS Patterns
```css
/* Start with mobile, enhance for desktop */
.component {
  /* Mobile styles (default) */
  padding: 1rem;
  
  /* Desktop enhancements */
  @media (min-width: 768px) {
    padding: 2rem;
  }
}
```

---

**This rule documents the proven mobile-first patterns implemented in the current Adjourn project. These patterns ensure excellent mobile performance and user experience.**

